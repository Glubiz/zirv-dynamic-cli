name: CD Pipeline

on:
  workflow_run:
    workflows: ["CI Pipeline"]  # Replace with the exact name of your CI workflow.
    types:
      - completed
  workflow_dispatch: {}

jobs:
  build:
    name: Build Binaries
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build CLI Program
        run: cargo build --release

      - name: Rename Binary for Release
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            mv target/release/mycli.exe mycli-${{ matrix.os }}.exe;
          else
            mv target/release/mycli mycli-${{ matrix.os }};
          fi

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: mycli-${{ matrix.os }}
          path: |
            mycli-${{ matrix.os }}*

  release:
    name: Create and Upload Release Assets
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Windows Artifact
        uses: actions/download-artifact@v3
        with:
          name: mycli-windows-latest
          path: artifacts

      - name: Download Linux Artifact
        uses: actions/download-artifact@v3
        with:
          name: mycli-ubuntu-latest
          path: artifacts

      - name: Download macOS Artifact
        uses: actions/download-artifact@v3
        with:
          name: mycli-macos-latest
          path: artifacts

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: "Release of mycli binaries for Windows, Linux, and macOS."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows Binary to Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/mycli-windows-latest.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Linux Binary to Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/mycli-ubuntu-latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload macOS Binary to Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/mycli-macos-latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
